<project name="BioSim" default="build" basedir=".">
	<description> Build file for BioSim by Scott Bell</description>
	
	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="doc" location="doc" />
	<property name="buildDir" location="build" />
	<property name="lib" location="lib" />
	<property name="jacorbDir" location="${lib}/jacorb" />
	<property name="tmpDir" location="tmp" />
	<property name="nsDir" location="${tmpDir}/ns" />
	<property name="resourceDir" location="resources" />
	<property name="stubsDir" location="stubs" />
	<property name="test.dir" location="test" />
	
	<!-- set server properties for this build -->
	<property name="log4jDir" location="${lib}/log4j" />
	
	<!-- set client properties for this build -->
	<property name="plotDir" location="${lib}/jfreechart" />
	
	<!-- set dist properties for this build -->
	<property name="distDir" location="dist" />
	<property name="distTmpDir" location="${distDir}/tmp" />
	
	<!-- set jnlp dist properties for this build -->
	<property name="jnlpDistDir" location="${distDir}/jnlp" />
	<property name="jnlpDistLibDir" location="${lib}/dist/jnlp" />
	<property name="jnlpDistTmpDir" location="${tmpDir}/jnlp" />
	
	<!-- set javadoc properties for this build -->
	<property name="javadocDir" location="${doc}/javadoc" />
	
	<!-- set users manual properties for this build -->
	<property name="manualDir" location="${doc}/users_manual_files" />
	<property name="manualTmpDir" location="${tmpDir}/users_manual" />
	
	<target name="init-build">
		<mkdir dir="${buildDir}" />
	</target>
	
	<target name="init-dist">
		<mkdir dir="${distDir}" />
	</target>
	
	<target name="init-tmp">
		<mkdir dir="${tmpDir}" />
	</target>
	
	<target name="stub-idl" depends="init-build,init-tmp"
		description="stub the IDL file">
		<mkdir dir="${stubsDir}" />
		<echo message="Stubbing the IDL file" />
		<java classname="org.jacorb.idl.parser" failonerror="yes">
			<arg value="-d" />
			<arg file="${stubsDir}" />
			<arg file="${src}/com/traclabs/biosim/idl/biosim.idl" />
			<classpath>
				<pathelement location="${jacorbDir}/idl.jar" />
				<pathelement location="${jacorbDir}/logkit.jar" />
			</classpath>
		</java>
	</target>
	
	<target name="compile-stubs" depends="init-build,init-tmp"
		description="compiles the IDL stubs">
		<echo message="Compiling stubs" />
		<javac srcdir="${stubsDir}" destdir="${buildDir}" fork="yes"
			memoryMaximumSize="256m" nowarn="yes" debug="on">
			<classpath>
				<pathelement location="${jacorbDir}/jacorb.jar" />
			</classpath>
		</javac>
	</target>
		
	<target name="stub-and-compile-idl" depends="stub-idl,compile-stubs"
		description="stub the IDL file">
	</target>
	
	<target name="build-server" depends="stub-and-compile-idl,build-util"
		description="compile the server">
		<echo message="Compling the server" />
		<javac srcdir="${src}/com/traclabs/biosim/server" destdir="${buildDir}"
			nowarn="yes" failonerror="yes" debug="on">
			<classpath>
				<pathelement location="${src}" />
				<pathelement location="${buildDir}" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="build-framework" depends="build-server"
		description="compile the framework">
		<echo message="Compling the framework" />
		<javac srcdir="${src}/com/traclabs/biosim/framework" destdir="${buildDir}"
			nowarn="yes" failonerror="yes" debug="on">
			<classpath>
				<pathelement location="${src}" />
				<pathelement location="${buildDir}" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="build-util" depends="" description="compile the util">
		<echo message="Compling the util" />
		<javac srcdir="${src}/com/traclabs/biosim/util" destdir="${buildDir}"
			nowarn="yes" failonerror="yes" debug="on">
			<classpath>
				<pathelement location="${src}" />
				<pathelement location="${buildDir}" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
			</classpath>
		</javac>
	</target>
	<target name="build-client" depends="stub-and-compile-idl"
		description="compile the client">
		<echo message="Compling the client" />
		<javac srcdir="${src}/com/traclabs/biosim/client" destdir="${buildDir}"
			nowarn="yes" failonerror="yes" debug="on">
			<classpath>
				<pathelement location="${src}" />
				<pathelement location="${buildDir}" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${plotDir}/jcommon.jar" />
				<pathelement location="${plotDir}/jfreechart.jar" />
				<pathelement location="${lib}/ptolemy/plot.jar" />
			</classpath>
		</javac>
	</target>
	
	<target name="build-dist" depends="build-server,build-client,init-dist"
		description="creates dist">
		<mkdir dir="${distDir}" />
		<mkdir dir="${distTmpDir}" />
		<echo message="Creating biosim jar for general distribution" />
		<jar destfile="${distDir}/biosim.jar">
			<fileset dir="${buildDir}"
				includes="com/traclabs/biosim/server/**, com/traclabs/biosim/util/**, com/traclabs/biosim/idl/**, com/traclabs/biosim/client/**" />
			<fileset dir="${resourceDir}"
				includes="com/traclabs/biosim/server/**, com/traclabs/biosim/util/**, com/traclabs/biosim/idl/**"
				excludes="com/traclabs/biosim/server/framework/configuration/**/**.xml, com/traclabs/biosim/server/framework/schema/**/**.xsd" />
			<fileset dir="${distTmpDir}">
				<exclude name="META-INF" />
				<exclude name="license-INF" />
			</fileset>
		</jar>
	</target>
	
	<target name="build-client-dist" depends="build-server,build-client,init-dist"
		description="creates dist">
		<mkdir dir="${distDir}" />
		<mkdir dir="${distTmpDir}" />
		<echo message="Unpacking libraries" />
		<unzip dest="${distTmpDir}">
			<fileset file="${jacorbDir}/jacorb.jar" />
			<fileset file="${jacorbDir}/logkit.jar" />
			<fileset file="${jacorbDir}/avalon-framework.jar" />
		</unzip>
		<echo message="Creating biosim jar for client distribution" />
		<jar destfile="${distDir}/biosim.jar">
			<fileset dir="${buildDir}"
				includes="com/traclabs/biosim/util/**, com/traclabs/biosim/idl/**, com/traclabs/biosim/client/util/**" />
			<fileset dir="${resourceDir}"
				includes="com/traclabs/biosim/server/**, com/traclabs/biosim/util/**, com/traclabs/biosim/idl/**" />
			<fileset dir="${distTmpDir}">
				<exclude name="META-INF" />
				<exclude name="license-INF" />
			</fileset>
		</jar>
	</target>
	
	<target name="build-stubs-dist" depends="build-server,build-client,init-dist"
		description="creates dist">
		<mkdir dir="${distDir}" />
		<mkdir dir="${distTmpDir}" />
		<echo message="Creating biosim.jar for stub distribution" />
		<jar destfile="${distDir}/biosim.jar">
			<fileset dir="${buildDir}" includes="com/traclabs/biosim/idl/**" />
			<fileset dir="${distTmpDir}">
				<exclude name="META-INF" />
				<exclude name="license-INF" />
			</fileset>
		</jar>
	</target>
	
	<target name="javadocs" depends="build-server,build-client"
		description="creates BioSim API documentation">
		<mkdir dir="${javadocDir}" />
		<echo message="Creating javadocs for BioSim" />
		<javadoc destdir="${javadocDir}" breakiterator="true"
			packagenames="com.traclabs.biosim.*" author="true" version="true"
			use="true" windowtitle="BioSim API" maxmemory="160m">
			<sourcepath>
				<pathelement location="${src}" />
				<pathelement location="${stubsDir}" />
			</sourcepath>
			<classpath>
				<pathelement location="${buildDir}" />
				<pathelement location="${resourceDir}" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/logkit.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
				<pathelement location="${plotDir}/jcommon.jar" />
				<pathelement location="${plotDir}/jfreechart.jar" />
				<pathelement location="${lib}/ptolemy/plot.jar" />
			</classpath>
		</javadoc>
	</target>
	<target name="build-manual" depends="init-tmp" description="creates the user's manual">
		<echo message="Creating the user's manual" />
		<mkdir dir="${manualTmpDir}" />
		<echo message="Copying neccessary files" />
		<copy todir="${manualTmpDir}">
			<fileset dir="${manualDir}">
				<exclude name="CVS" />
			</fileset>
		</copy>
		<echo message="Logging to ${manualTmpDir}, check there for output/errors" />
		<echo message="Creating empty index file" />
		<touch file="${manualTmpDir}/users_manual.ind" />
		<echo message="First latex pass" />
		<exec executable="latex" dir="${manualTmpDir}" error="${manualTmpDir}/latex1.err"
			output="${manualTmpDir}/latex1.out">
			<arg line="${manualDir}/users_manual.tex" />
		</exec>
		<echo message="Making index file" />
		<exec executable="makeindex" dir="${manualDir}" error="${manualTmpDir}/makeindex.err"
			output="${manualTmpDir}/makeindex.out">
			<arg line="${manualTmpDir}/users_manual.idx" />
		</exec>
		<echo message="Making bibliography" />
		<exec executable="bibtex" dir="${manualTmpDir}" error="${manualTmpDir}/bibtex.err"
			output="${manualTmpDir}/bibtex.out">
			<arg line="${manualTmpDir}/users_manual.tex" />
		</exec>
		<echo message="Second latex pass" />
		<exec executable="latex" dir="${manualTmpDir}" error="${manualTmpDir}/latex2.err"
			output="${manualTmpDir}/latex2.out">
			<arg line="${manualTmpDir}/users_manual.tex" />
		</exec>
		<echo message="Third latex pass" />
		<exec executable="latex" dir="${manualTmpDir}" error="${manualTmpDir}/latex3.err"
			output="${manualTmpDir}/latex3.out">
			<arg line="${manualTmpDir}/users_manual.tex" />
		</exec>
		<echo message="Creating users_manual.pdf file in ${doc}" />
		<exec executable="dvipdf" dir="${doc}" error="${manualTmpDir}/pdf.err"
			output="${manualTmpDir}/pdf.out">
			<arg line="${manualTmpDir}/users_manual.dvi" />
		</exec>
	</target>
	<target name="run-nameserver">
		<echo message="Starting nameserver" />
		<mkdir dir="${nsDir}" />
		<java classname="org.jacorb.naming.NameServer" fork="yes"
			failonerror="yes">
			<classpath>
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/logkit.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
			</classpath>
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="org.jacorb.orb.ORBSingleton" />
			<sysproperty key="org.omg.CORBA.ORBClass" value="org.jacorb.orb.ORB" />
			<arg file="${nsDir}/ior.txt" />
		</java>
	</target>
	<target name="run-nameserver-viewer" description="runs the nameserver viewer">
		<echo message="Starting nameserver viewer" />
		<java classname="org.jacorb.naming.namemanager.NameManager" fork="yes"
			failonerror="yes">
			<sysproperty key="org.omg.CORBA.ORBClass" value="org.jacorb.orb.ORB" />
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="org.jacorb.orb.ORBSingleton" />
			<sysproperty key="ORBInitRef.NameService" value="file:${nsDir}/ior.txt" />
			<classpath>
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/logkit.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
			</classpath>
		</java>
	</target>
	<target name="run-server" description="runs the server">
		<echo message="Starting biosim server" />
		<java classname="com.traclabs.biosim.server.framework.BiosimServer"
			fork="yes" failonerror="yes">
			<sysproperty key="org.omg.CORBA.ORBClass" value="org.jacorb.orb.ORB" />
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="org.jacorb.orb.ORBSingleton" />
			<sysproperty key="ORBInitRef.NameService" value="file:${nsDir}/ior.txt" />
			<classpath>
				<pathelement location="${buildDir}" />
				<pathelement location="${resourceDir}" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/logkit.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
				<pathelement location="${bionetDir}" />
				<pathelement location="${bionetDir}/JBionet.jar" />
			</classpath>
		</java>
	</target>
	<target name="run-client" description="runs the client">
		<echo message="Starting biosim client" />
		<java classname="com.traclabs.biosim.client.framework.BiosimMain"
			fork="yes" failonerror="yes">
			<sysproperty key="org.omg.CORBA.ORBClass" value="org.jacorb.orb.ORB" />
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="org.jacorb.orb.ORBSingleton" />
			<sysproperty key="ORBInitRef.NameService" value="file:${nsDir}/ior.txt" />
			<classpath>
				<pathelement location="${buildDir}" />
				<pathelement location="${resourceDir}" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/logkit.jar" />
				<pathelement location="${xercesDir}/xercesImpl.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
				<pathelement location="${plotDir}/jcommon.jar" />
				<pathelement location="${plotDir}/jfreechart.jar" />
				<pathelement location="${plotDir}/ptolemy/plot.jar" />
			</classpath>
		</java>
	</target>
	<target name="build-all" depends="docs, build-manual, build-dist"
		description="compile biosim, create docs">
	</target>
	<target name="build" depends="build-server,build-client"
		description="builds biosim">
	</target>
	<target name="all" depends="clean-all,build-all" description="cleans then builds everything">
	</target>
	<target name="main" depends="build" description="builds biosim (alias to build)">
	</target>
	<target name="docs" depends="javadocs, build-manual"
		description="creates documentation">
	</target>
	<target name="rebuild" depends="clean,build" description="cleans then builds">
	</target>
	<target name="clean" description="clean up">
		<delete dir="${buildDir}" />
		<delete dir="${stubsDir}" />
		<delete dir="${tmpDir}" />
		<delete dir="${distDir}" />
	</target>
	<target name="clean-all" depends="clean"
		description="clean up everything (docs, dists)">
		<delete dir="${javadocDir}" />
	</target>
	<target name="update" description="update from subversion">
		<exec executable="svn">
			<arg line="update" />
		</exec>
	</target>
	<target name="update-and-rebuild-and-test-and-dist" depends="update,rebuild,test,build-dist"
		description="update from subversion and rebuilds" />
	<target name="test" depends="build">
		<javac srcdir="${test.dir}" destdir="${buildDir}"
			memoryMaximumSize="256m" fork="yes" debug="on">
			<classpath>
				<pathelement location="${buildDir}" />
				<pathelement location="${resourceDir}" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/logkit.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
				<pathelement location="${plotDir}/jcommon.jar" />
				<pathelement location="${plotDir}/jfreechart.jar" />
				<pathelement location="${lib}/ptolemy/plot.jar" />
				<pathelement location="${lib}/junit/junit.jar" />
			</classpath>
		</javac>
		<mkdir dir="${tmpDir}/junit-results" />
		<junit haltonfailure="no" printsummary="on" fork="yes"
			maxmemory="256m" debug="on">
			<classpath>
				<pathelement location="${buildDir}" />
				<pathelement location="${resourceDir}" />
				<pathelement location="${log4jDir}/log4j.jar" />
				<pathelement location="${jacorbDir}/jacorb.jar" />
				<pathelement location="${jacorbDir}/logkit.jar" />
				<pathelement location="${jacorbDir}/avalon-framework.jar" />
				<pathelement location="${plotDir}/jcommon.jar" />
				<pathelement location="${plotDir}/jfreechart.jar" />
				<pathelement location="${lib}/junit/junit.jar" />
				<pathelement location="${lib}/mysql/mysql-jdbc.jar" />
			</classpath>
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${tmpDir}/junit-results">
				<fileset dir="${buildDir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
	</target>
	<target name="build-jnlp-dist"
		depends="build-server,build-client,build-framework,init-dist,init-tmp"
		description="creates windows dist">
		<mkdir dir="${jnlpDistDir}" />
		<mkdir dir="${jnlpDistTmpDir}" />
		<echo message="Unpacking libraries" />
		<unzip dest="${jnlpDistTmpDir}">
			<fileset file="${log4jDir}/log4j.jar" />
			<fileset file="${jacorbDir}/jacorb.jar" />
			<fileset file="${jacorbDir}/logkit.jar" />
			<fileset file="${jacorbDir}/avalon-framework.jar" />
			<fileset file="${plotDir}/jcommon.jar" />
			<fileset file="${plotDir}/jfreechart.jar" />
			<fileset file="${lib}/ptolemy/plot.jar" />
		</unzip>
		<echo message="Create biosim jar" />
		<jar destfile="${jnlpDistDir}/biosim.jar" manifest="${jnlpDistLibDir}/MANIFEST.MF">
			<fileset dir="${buildDir}" />
			<fileset dir="${resourceDir}" />
			<fileset dir="${jnlpDistTmpDir}">
				<exclude name="META-INF" />
				<exclude name="license-INF" />
			</fileset>
		</jar>
		<signjar jar="${jnlpDistDir}/biosim.jar" alias="mykey"
			keystore="${jnlpDistLibDir}/biosimKeystore" storepass="traclabs" />
	</target>
</project>
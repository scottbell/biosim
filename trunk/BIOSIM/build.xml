<project name="BioSim" default="build" basedir=".">
	<description>
        	Build file for BioSim
	</description>
	<!-- set global properties for this build --> 
	<property name="build.compiler"  value="jikes"/>
  	<property name="src" location="src"/>
  	<property name="doc" location="doc"/>
	<property name="buildDir" location="build"/>
	<property name="classes" location="${buildDir}/classes"/>
	<property name="lib" location="lib"/>
	<property name="jacorbDir" location="${lib}/jacorb"/>
	<property name="xercesDir" location="${lib}/xerces"/>
	<property name="tmpDir" location="tmp"/>
	<property name="nsDir" location="${tmpDir}/ns"/>
	<property name="resourceDir" location="resources"/>
	<!-- set server properties for this build --> 
	<property name="server" location="${buildDir}/server"/>
	<property name="serverClasses" location="${server}/classes"/>
	<property name="serverStubs" location="${server}/stubs"/>
	<!-- set client properties for this build --> 
	<property name="client" location="${buildDir}/client"/>
	<property name="clientClasses" location="${client}/classes"/>
	<property name="clientStubs" location="${client}/stubs"/>
	<property name="plotDir" location="${lib}/jfreechart"/>
	<!-- set distro properties for this build -->
	<property name="distroDir" location="distro"/>
	<!-- set ga distro properties for this build --> 
	<property name="gaDistroDir" location="${distroDir}/ga"/>
	<!-- set win distro properties for this build --> 
	<property name="winDistroDir" location="${distroDir}/win"/>
	<property name="winDistroLibDir" location="${lib}/distro/win"/>
	<property name="winDistroTmpDir" location="${tmpDir}/win"/>
	<!-- set javadoc properties for this build --> 
	<property name="javadocDir" location="${doc}/javadoc"/>
	<!-- set users manual properties for this build --> 
	<property name="manualDir" location="${doc}/users_manual_files"/>
	<property name="manualTmpDir" location="${tmpDir}/users_manual"/>
	

	<target name="init-build">
		<mkdir dir="${buildDir}"/>
	</target>
	
	<target name="init-distro">
		<mkdir dir="${distroDir}"/>
	</target>
	
	<target name="init-tmp">
		<mkdir dir="${tmpDir}"/>
	</target>
  
  	<target name="stub-server" depends="init-build" description="stub the IDL file for the server">
		<echo message="Stubbing the IDL file for the server"/>
		<mkdir dir="${serverStubs}"/>
		<java classname="ParserHack" failonerror="yes">
			<arg value="-d"/> 
			<arg file="${serverStubs}"/>
			<arg file="${src}/biosim/idl/biosim.idl"/>
			<classpath>
				<pathelement location="${jacorbDir}"/>
				<pathelement location="${jacorbDir}/idl.jar"/>
				<pathelement location="${jacorbDir}/logkit.jar"/>
			</classpath>
		</java>
		<mkdir dir="${serverClasses}"/>
		<echo message="Compiling server stubs"/>
		<javac srcdir="${serverStubs}" destdir="${serverClasses}">
			<classpath>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
			</classpath>
		</javac>
	</target>

	<target name="build-server" depends="stub-server" description="compile the server">
		<mkdir dir="${server}"/>
		<mkdir dir="${serverClasses}"/>
		<echo message="Compling the server"/>
		<javac srcdir="${src}/biosim/server" destdir="${serverClasses}">
			<classpath>
				<pathelement location="${src}"/>
				<pathelement location="${serverClasses}"/>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
				<pathelement location="${xercesDir}/xercesImpl.jar"/>
				<pathelement location="${xercesDir}/xml-apis.jar"/>
				<pathelement location="${xercesDir}/xmlParserAPIs.jar"/>
			</classpath>
		</javac>
	</target>
	
	<target name="stub-client" depends="init-build" description="stub the IDL file for the client">
		<echo message="Stubbing the IDL file for the client"/>
		<mkdir dir="${clientStubs}"/>
		<echo message="Compiling server stubs"/>
		<java classname="ParserHack" failonerror="yes">
			<arg value="-noskel"/> 
			<arg value="-d"/>
			<arg file="${clientStubs}"/>
			<arg file="${src}/biosim/idl/biosim.idl"/>
			<classpath>
				<pathelement location="${jacorbDir}"/>
				<pathelement location="${jacorbDir}/idl.jar"/>
				<pathelement location="${jacorbDir}/logkit.jar"/>
			</classpath>
		</java>
		<mkdir dir="${clientClasses}"/>
		<echo message="Compiling client stubs"/>
		<javac srcdir="${clientStubs}" destdir="${clientClasses}">
			<classpath>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
			</classpath>
		</javac>
	</target>
  
   	<target name="build-client" depends="stub-client" description="compile the client">
		<mkdir dir="${client}"/>
		<mkdir dir="${clientClasses}"/>
		<echo message="Compling the client"/>
		<javac srcdir="${src}/biosim/client" destdir="${clientClasses}">
			<classpath>
				<pathelement location="${src}"/>
				<pathelement location="${clientClasses}"/>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
				<pathelement location="${xercesDir}/xercesImpl.jar"/>
				<pathelement location="${xercesDir}/xml-apis.jar"/>
				<pathelement location="${xercesDir}/xmlParserAPIs.jar"/>
				<pathelement location="${plotDir}/jcommon.jar"/>
				<pathelement location="${plotDir}/jfreechart.jar"/>
			</classpath>
		</javac>
	</target>
	
	<target name="build-win-distro" depends="build-server,build-client, init-distro, init-tmp" description="creates windows distro">
		<mkdir dir="${winDistroDir}"/>
		<mkdir dir="${winDistroTmpDir}"/>
		<echo message="Unpacking libraries"/>
		<unzip dest="${winDistroTmpDir}">
			<fileset file="${jacorbDir}/jacorb.jar"/>
			<fileset file="${jacorbDir}/logkit.jar"/>
			<fileset file="${jacorbDir}/avalon-framework.jar"/>
			<fileset file="${xercesDir}/xercesImpl.jar"/>
			<fileset file="${xercesDir}/xml-apis.jar"/>
			<fileset file="${xercesDir}/xmlParserAPIs.jar"/>
			<fileset file="${plotDir}/jcommon.jar"/>
			<fileset file="${plotDir}/jfreechart.jar"/>
		</unzip>
		<echo message="Create biosim jar"/>
		<jar destfile="${winDistroDir}/biosim.jar">
			<fileset dir="${serverClasses}"/>
			<fileset dir="${clientClasses}"/>
			<fileset dir="${resourceDir}"/>
			<fileset dir="${winDistroTmpDir}">
				<exclude name="META-INF"/>
				<exclude name="license-INF"/>
			</fileset>
			<fileset file="${jacorbDir}/jacorb.properties"/>
		</jar>
		<echo message="Copying necessary windows distro utilities"/>
		<copy todir="${winDistroDir}">
			<fileset dir="${winDistroLibDir}">
				<exclude name="CVS"/>
			</fileset>
		</copy>
	</target>
	
	<target name="build-ga-distro" depends="build-server,build-client,init-distro" description="creates ga distro">
		<mkdir dir="${gaDistroDir}"/>
		<echo message="Creating biosim jar for genetic algorithm engine"/>
		<jar destfile="${gaDistroDir}/biosim.jar">
			<fileset dir="${serverClasses}"/>
			<fileset dir="${resourceDir}"/>
		</jar>
	</target>
	
	<target name="javadocs" depends="build-server,build-client" description="creates BioSim API documentation">
		<mkdir dir="${javadocDir}"/>
		<echo message="Creating javadocs for BioSim"/>
		<javadoc 
			destdir="${javadocDir}" 
			breakiterator="true" 
			packagenames="biosim.*" 
			author="true"
			version="true"
			use="true"
			windowtitle="BioSim API"
			maxmemory="160m">
			<sourcepath>
				<pathelement location="${src}"/>
				<pathelement location="${serverStubs}"/>
				<pathelement location="${clientStubs}"/>
			</sourcepath>
			<classpath>
				<pathelement location="${serverClasses}"/>
				<pathelement location="${clientClasses}"/>
				<pathelement location="${resourceDir}"/>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
				<pathelement location="${jacorbDir}/logkit.jar"/>
				<pathelement location="${jacorbDir}/avalon-framework.jar"/>
				<pathelement location="${xercesDir}/xercesImpl.jar"/>
				<pathelement location="${xercesDir}/xml-apis.jar"/>
				<pathelement location="${xercesDir}/xmlParserAPIs.jar"/>
				<pathelement location="${plotDir}/jcommon.jar"/>
				<pathelement location="${plotDir}/jfreechart.jar"/>
			</classpath>
		</javadoc>
	</target>
	
	<target name="build-manual" depends="init-tmp" description="creates the user's manual">
		<echo message="Creating the user's manual"/>
		<mkdir dir="${manualTmpDir}"/>
		<echo message="Copying neccessary files"/>
		<copy todir="${manualTmpDir}">
			<fileset dir="${manualDir}">
				<exclude name="CVS"/>
			</fileset>
		</copy>
		<echo message="Logging to ${manualTmpDir}, check there for output/errors"/>
		<echo message="Creating empty index file"/>
		<touch file="${manualTmpDir}/users_manual.ind"/>
		<echo message="First latex pass"/>
		<exec executable="latex" dir="${manualTmpDir}" error="${manualTmpDir}/latex1.err" output="${manualTmpDir}/latex1.out">
			<arg line="${manualDir}/users_manual.tex"/>
		</exec>
		<echo message="Making index file"/>
		<exec executable="makeindex" dir="${manualDir}" error="${manualTmpDir}/makeindex.err" output="${manualTmpDir}/makeindex.out">
			<arg line="${manualTmpDir}/users_manual.idx"/>
		</exec>
		<echo message="Making bibliography"/>
		<exec executable="bibtex" dir="${manualTmpDir}" error="${manualTmpDir}/bibtex.err" output="${manualTmpDir}/bibtex.out">
			<arg line="${manualTmpDir}/users_manual.tex"/>
		</exec>
		<echo message="Second latex pass"/>
		<exec executable="latex" dir="${manualTmpDir}" error="${manualTmpDir}/latex2.err" output="${manualTmpDir}/latex2.out">
			<arg line="${manualTmpDir}/users_manual.tex"/>
		</exec>
		<echo message="Creating ps file"/>
		<exec executable="dvips" dir="${manualTmpDir}" error="${manualTmpDir}/ps.err" output="${manualTmpDir}/ps.out">
			<arg line="-o"/>
			<arg line="${manualTmpDir}/users_manual.ps"/>
			<arg line="${manualTmpDir}/users_manual.dvi"/>
		</exec>
		<echo message="Creating users_manual.pdf file in ${doc}"/>
		<exec executable="ps2pdf" dir="${doc}" error="${manualTmpDir}/pdf.err" output="${manualTmpDir}/pdf.out">
			<arg line="${manualTmpDir}/users_manual.ps"/>
		</exec>
	</target>
	
	<target name="run-nameserver" depends="init-build" description="runs the nameserver">
		<mkdir dir="${nsDir}"/>
		<echo message="Starting nameserver"/>
		<java classname="org.jacorb.naming.NameServer" error="nameserver.txt"  failonerror="yes">
			<sysproperty key="org.omg.CORBA.ORBClass" value="org.jacorb.orb.ORB"/>
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="org.jacorb.orb.ORBSingleton"/>
			<arg value="${nsDir}/ior.txt"/>
			<classpath>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
				<pathelement location="${jacorbDir}/logkit.jar"/>
				<pathelement location="${jacorbDir}/avalon-framework.jar"/>
			</classpath>
		</java>
	</target>
	
	<target name="run-nameserver-viewer" description="runs the nameserver viewer">
		<echo message="Starting nameserver viewer"/>
		<java classname="org.jacorb.naming.namemanager.NameManager" failonerror="yes">
			<sysproperty key="org.omg.CORBA.ORBClass" value="org.jacorb.orb.ORB"/>
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="org.jacorb.orb.ORBSingleton"/>
			<sysproperty key="ORBInitRef.NameService" value="file:${nsDir}/ior.txt"/>
			<classpath>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
				<pathelement location="${jacorbDir}/logkit.jar"/>
				<pathelement location="${jacorbDir}/avalon-framework.jar"/>
			</classpath>
		</java>
	</target>
	
	<target name="run-server" description="runs the server">
		<echo message="Starting biosim server"/>
		<java classname="biosim.server.framework.BiosimServer" failonerror="yes">
			<sysproperty key="org.omg.CORBA.ORBClass" value="org.jacorb.orb.ORB"/>
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="org.jacorb.orb.ORBSingleton"/>
			<sysproperty key="ORBInitRef.NameService" value="file:${nsDir}/ior.txt"/>
			<classpath>
				<pathelement location="${serverClasses}"/>
				<pathelement location="${resourceDir}"/>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
				<pathelement location="${jacorbDir}/logkit.jar"/>
				<pathelement location="${jacorbDir}/avalon-framework.jar"/>
				<pathelement location="${xercesDir}/xercesImpl.jar"/>
				<pathelement location="${xercesDir}/xml-apis.jar"/>
				<pathelement location="${xercesDir}/xmlParserAPIs.jar"/>
			</classpath>
		</java>
	</target>
	
	<target name="run-client" description="runs the client">
		<echo message="Starting biosim client"/>
		<java classname="biosim.client.framework.BiosimMain" failonerror="yes">
			<arg value="-console"/> 
			<sysproperty key="org.omg.CORBA.ORBClass" value="org.jacorb.orb.ORB"/>
			<sysproperty key="org.omg.CORBA.ORBSingletonClass" value="org.jacorb.orb.ORBSingleton"/>
			<sysproperty key="ORBInitRef.NameService" value="file:${nsDir}/ior.txt"/>
			<classpath>
				<pathelement location="${clientClasses}"/>
				<pathelement location="${resourceDir}"/>
				<pathelement location="${jacorbDir}/jacorb.jar"/>
				<pathelement location="${jacorbDir}/logkit.jar"/>
				<pathelement location="${xercesDir}/xercesImpl.jar"/>
				<pathelement location="${jacorbDir}/avalon-framework.jar"/>
				<pathelement location="${xercesDir}/xml-apis.jar"/>
				<pathelement location="${xercesDir}/xmlParserAPIs.jar"/>
				<pathelement location="${plotDir}/jcommon.jar"/>
				<pathelement location="${plotDir}/jfreechart.jar"/>
			</classpath>
		</java>
	</target>
  
  	<target name="all" depends="docs, build-manual, build-ga-distro, build-win-distro" description="compile biosim, create docs">
	</target>
	
	<target name="build" depends="build-server,build-client" description="builds biosim">
	</target>
	
	<target name="main" depends="build" description="builds biosim (alias to build)">
	</target>
	
	<target name="docs" depends="javadocs, build-manual" description="creates documentation">
	</target>

	<target name="clean" description="clean up">
		<delete dir="${buildDir}"/>
		<delete dir="${distroDir}"/>
		<delete dir="${tmpDir}"/>
	</target>
	
	<target name="fetch" description="gets the latest version from CVS">
		<cvs command="update -d"/>
	</target>
	
	<target name="update" description="gets the latest version from CVS (alias to fetch)" depends="fetch">
	</target>
	
	<target name="commit" description="gets the latest version from CVS">
		<cvs command="commit -m ''"/>
	</target>
	
	<target name="test" description="test">
		<dirname property="foo.dirname" file="."/>
	</target>
</project>

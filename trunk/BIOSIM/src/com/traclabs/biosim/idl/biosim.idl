//Prototyping
module biosim{
        module idl{
                typedef sequence <string> StringList;
                typedef sequence <float> FloatList;
                module simulation{
                        module power{
                                interface PowerPS;
                                interface PowerStore;
				interface PowerConsumer;
				interface PowerProducer;
                                typedef sequence <PowerStore> PowerStoreList;
                        };
                        module crew{
                                interface Activity;
                                interface CrewPerson;
                                interface CrewGroup;
                                typedef sequence <CrewPerson> CrewPersonList;
                                enum Sex {male, female};
                                interface Activity;
                                interface RepairActivity;
                                interface MaitenanceActivity;
                                interface CrewPerson;
                                interface CrewGroup;
                        };
                        module air{
                                interface AirRS;
                                interface O2Store;
                                interface CO2Store;
				interface O2Consumer;
                                interface CO2Consumer;
				interface O2Producer;
                                interface CO2Producer;
                                struct Breath{
                                        float O2;
                                        float CO2;
					float water;
                                        float other;
                                };
                                typedef sequence <O2Store> O2StoreList;
                                typedef sequence <CO2Store> CO2StoreList;
                        };
                        module food{
                                interface Shelf;
                                interface BiomassRS;
                                interface BiomassStore;
                                interface FoodProcessor;
                                interface FoodStore;
                                interface Shelf;
				interface Plant;
				interface BiomassConsumer;
                                interface FoodConsumer;
				interface BiomassProducer;
				interface FoodProducer;
                                enum PlantType {WHEAT};
				struct BioMatter{
					float mass;
					PlantType type;
				};
				struct FoodMatter{
					float mass;
					PlantType type;
				};
                                typedef sequence <Shelf> ShelfList;
                                typedef sequence <BiomassStore> BiomassStoreList;
                                typedef sequence <FoodStore> FoodStoreList;
				typedef sequence <BioMatter> BioMatterList;
				typedef sequence <FoodMatter> FoodMatterList;
                        };
                        module environment{
                                interface SimEnvironment;
				interface AirConsumer;
				interface LightConsumer;
                                interface O2AirConsumer;
                                interface CO2AirConsumer
				;interface AirProducer;
				interface O2AirProducer;
                                interface CO2AirProducer;
                                typedef sequence <SimEnvironment> SimEnvironmentList;
                        };
                        module water{
                                interface WaterRS;
                                interface PotableWaterStore;
                                interface GreyWaterStore;
                                interface DirtyWaterStore;
				interface PotableWaterConsumer;
                                interface GreyWaterConsumer;
                                interface DirtyWaterConsumer;
				interface PotableWaterProducer;
                                interface GreyWaterProducer;
                                interface DirtyWaterProducer;
                                typedef sequence <PotableWaterStore> PotableWaterStoreList;
                                typedef sequence <GreyWaterStore> GreyWaterStoreList;
                                typedef sequence <DirtyWaterStore> DirtyWaterStoreList;
                        };
                        module framework{
				interface SimBioModule;
				interface Injector;
				interface Accumulator;
				interface Store;
                        };
                };
		module sensor{
                        module framework{
                                interface GenericSensor;
                        };
                };
                module util{
                        module log{
                                interface LogNode;
                                enum LogHandlerType {SCREEN,XML,FLAT,DB};
                                typedef sequence <LogHandlerType> LogHandlerTypeList;
                                interface Logger;
                                typedef sequence <LogNode> LogNodeList;
                        };
                };
                module framework{
                        enum BioDriverInit {DEFAULT_INIT, OPTIMAL_INIT, FLOWS_ONLY_INIT, NO_INIT};
                        enum StochasticIntensity {HIGH_STOCH, MEDIUM_STOCH, LOW_STOCH, NONE_STOCH};
                        enum MalfunctionIntensity {SEVERE_MALF, MEDIUM_MALF, LOW_MALF};
                        enum MalfunctionLength {TEMPORARY_MALF, PERMANENT_MALF};
                        interface Malfunction;
                        typedef sequence <Malfunction> MalfunctionList;
                        interface BioModule;
                        interface BioDriver;
                };
        };
};

//Declarations
module biosim{
        module idl{
                #include "framework.idl";
                #include "util.idl"
                module simulation{
                        #include "simulation/crew.idl"
                        #include "simulation/environment.idl"
                        #include "simulation/food.idl"
                        #include "simulation/power.idl"
                        #include "simulation/air.idl"
                        #include "simulation/water.idl"
                        #include "simulation/framework.idl"
                };
		module sensor{
                        #include "sensor/framework.idl"
                        #include "sensor/air.idl"
                        #include "sensor/crew.idl"
                        #include "sensor/environment.idl"
                        #include "sensor/food.idl"
                        #include "sensor/power.idl"
                        #include "sensor/water.idl"
                };
		module actuator{
                        #include "actuator/framework.idl"
                        #include "actuator/air.idl"
                        #include "actuator/crew.idl"
                        #include "actuator/environment.idl"
                        #include "actuator/food.idl"
                        #include "actuator/power.idl"
                        #include "actuator/water.idl"
                };
        };
};

















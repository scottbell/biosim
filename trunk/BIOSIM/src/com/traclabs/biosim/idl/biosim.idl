module ALSS{

	interface BioModule{
		oneway void tick();
		string getModuleName();
	};

	interface Activity{
		string getName();
		long getTimeLength();
	};

	//Object representing a crew person
	interface CrewPerson{
		Activity getCurrentActivity();
		void setCurrentActivity(in Activity newActivity);
		string getName();
	};

	//Object representing the crew
	interface Crew : BioModule{
		Activity getScheduledActivityByName(in string name);
		Activity getScheduledActivityByOrder(in long order);
		CrewPerson getCrewPerson(in string name);
		void createCrewPerson(in string name);
	};

	//Object representing the Energy Production System
	interface PowerPS : BioModule{
	};

	//Object representing the Power Store
	interface PowerStore : BioModule{
		float addPower(in float watts);
		float takePower(in float watts);
		float getPowerLevel();
	};

	//Object representing the Air Recovery System
	interface AirRS : BioModule{
	};

	//Object representing the Air Store
	interface O2Store : BioModule{
		void setO2Capacity(in float liters);
		void setO2Level(in float liters);
		float addO2(in float liters);
		float takeO2(in float liters);
		float getO2Level();
	};

	interface CO2Store : BioModule{
		void setCO2Capacity(in float liters);
		void setCO2Level(in float liters);
		float addCO2(in float liters);
		float takeCO2(in float liters);
		float getCO2Level();
	};

	//Object representing the Biomass Recovery System
	interface BiomassRS : BioModule{
	};
	
	interface FoodProcessor : BioModule{
	};
	
	interface FoodStore : BioModule{
		float addFood(in float kilograms);
		float takeFood(in float kilograms);
		float getFoodLevel();
	};
	
	interface SimEnvironment : BioModule{
		void setCO2Capacity(in float liters);
		void setCO2Level(in float liters);
		void setO2Capacity(in float liters);
		void setO2Level(in float liters);
		float getO2Level();
		float getCO2Level();
		float addCO2(in float liters);
		float addO2(in float liters);
		float takeO2(in float liters);
		float takeCO2(in float liters);
	};

	//Object representing the Biomass Store
	interface BiomassStore : BioModule{
		float addBiomass(in float kilograms);
		float takeBiomass(in float kilograms);
		float getBiomassLevel();
	};

	//Object representing the Water Recovery System
	interface WaterRS : BioModule{
	};

	//Object representing the Potable Water Store
	interface PotableWaterStore : BioModule{
		float takeWater(in float liters);
		float addWater(in float liters);
		float getWaterLevel();
	};
	
	//Object representing the Grey Water Store
	interface GreyWaterStore : BioModule{
		float takeWater(in float liters);
		float addWater(in float liters);
		float getWaterLevel();
	};
	
	//Object representing the Dirty Water Store
	interface DirtyWaterStore : BioModule{
		float takeWater(in float liters);
		float addWater(in float liters);
		float getWaterLevel();
	};
};

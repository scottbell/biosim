module biosim{
        module idl{
		
                module framework{
                        interface BioModule{
                                void tick();
                                string getModuleName();
				void reset();
				void log();
				void setLogging(in boolean pLogging);
				boolean isLogging();
                        };
			
			interface Store : BioModule{
				void setCapacity(in float metricAmount);
				void setLevel(in float metricAmount);
				float add(in float metricAmount);
                                float take(in float metricAmount);
                                float getLevel();
			};
                };
		
		module util{
			interface Log;
			interface Logger;
			interface LogNode;
			enum LogHandlerType {screen,xml,flat,db};
			interface Log{
				LogNode getHead();
			};
			interface Logger{
				void processLog(in Log thingToLog);
				LogHandlerType getLogHandlerType();
				void setLogHandlerType(in LogHandlerType pLogType);
				void setProcessingLogs(in boolean pAllowLogging);
				boolean isProcessingLogs();
			};
			typedef sequence <LogNode> LogNodeList;
			interface LogNode{
				string getValue();
				void setValue(in string newValue);
				LogNode addChild (in string pChildName);
				LogNodeList getChildren();
				boolean hasChildren();
				LogNode getChildDeep(in string pName);
				LogNode getChildShallow(in string pName);
			};
		};

                module crew{
                        interface Activity;
                        interface CrewPerson;
                        interface CrewGroup;
                        typedef sequence <CrewPerson> CrewPersonList;
                        enum Sex {male, female};
                        interface Activity{
                                string getName();
                                long getTimeLength();
                                long getActivityIntensity();
				long getOrder();
                        };
                        interface CrewPerson{
                                Activity getCurrentActivity();
                                void setCurrentActivity(in Activity newActivity);
                                string getName();
                                float getAge();
                                float getWeight();
                                long getTimeActivityPerformed();
                                Sex getSex();
				boolean isStarving();
				boolean isPoisoned();
				boolean isThirsty();
				boolean isSuffocating();
				boolean isDead();
				float getGreyWaterProduced();
				float getDirtyWaterProduced();
				float getPotableWaterConsumed();
				float getFoodConsumed();
				float getCO2Produced();
				float getO2Consumed();
                        };
                        interface CrewGroup : framework::BioModule{
                                Activity getScheduledActivityByName(in string name);
                                Activity getScheduledActivityByOrder(in long order);
                                CrewPerson getCrewPerson(in string name);
                                CrewPerson createCrewPerson(in string name, in float age, in float weight, in Sex pSex);
                                CrewPersonList getCrewPeople();
                        };
                };

                module power{
                        interface PowerPS : framework::BioModule{
                                float getPowerProduced();
                        };
                        interface PowerStore : framework::Store{
                        };
                };

                module air{
                        interface AirRS : framework::BioModule{
                                float getPowerConsumed();
                                float getCO2Consumed();
                                float getO2Produced();
				float getCO2Produced();
				boolean hasPower();
				boolean hasCO2();
                        };
                        interface O2Store : framework::Store{
                        };
                        interface CO2Store : framework::Store{
                        };

                        struct Breath{
                                float O2;
                                float CO2;
                                float other;
                        };
                };

                module food{
                        interface BiomassRS : framework::BioModule{
                                float getPowerConsumed();
                                float getGreyWaterConsumed();
                                float getCO2Consumed();
				float getO2Produced();
                                float getBiomassProduced();
				boolean isDead();
				boolean hasCO2();
				boolean hasWater();
				boolean hasPower();
				boolean isO2Poisoned();
                        };
                        interface BiomassStore : framework::Store{
                        };
                        interface FoodProcessor : framework::BioModule{
                                float getBiomassConsumed();
                                float getPowerConsumed();
                                float getFoodProduced();
				boolean hasPower();
				boolean hasBiomass();
			};
                        interface FoodStore : framework::Store{
                        };
                };

                module environment{
                        interface SimEnvironment : framework::BioModule{
                                void setCO2Level(in float liters);
                                void setO2Level(in float liters);
                                void setOtherLevel(in float liters);
                                void setCapacity(in float liters);
                                float getO2Level();
                                float getCO2Level();
                                float getOtherLevel();
                                float getTotalLevel();
                                float addCO2(in float liters);
                                float addO2(in float liters);
                                float addOther(in float liters);
                                air::Breath takeO2Breath(in float liters);
                                air::Breath takeCO2Breath(in float liters);
                                long getTicks();
                                void setTotalLevel(in float liters);
                        };
                };

                module water{
                        interface WaterRS : framework::BioModule{
                                float getPotableWaterProduced();
                                float getGreyWaterProduced();
                                float getPowerConsumed();
                                float getDirtyWaterConsumed();
                                float getGreyWaterConsumed();
				boolean ROHasPower();
				boolean AESHasPower();
				boolean PPSHasPower();
				boolean BWPHasPower();
				boolean ROHasWater();
				boolean AESHasWater();
				boolean PPSHasWater();
				boolean BWPHasWater();
                        };
                        interface PotableWaterStore : framework::Store{
                        };
                        interface GreyWaterStore : framework::Store{
                        };
                        interface DirtyWaterStore : framework::Store{
                        };
                };
        };
};

















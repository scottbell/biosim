module biosim{

        module idl{
		
		module framework{
			interface BioModule{
				void tick();
				string getModuleName();
			};
		};
		
                module crew{
			interface Activity;
			interface CrewPerson;
			interface CrewGroup;
			typedef sequence <CrewPerson> CrewPersonList;
			enum Sex {male, female};
                        interface Activity{
                                string getName();
                                long getTimeLength();
				long getActivityIntensity();
                        };
                        interface CrewPerson{
                                Activity getCurrentActivity();
                                void setCurrentActivity(in Activity newActivity);
                                string getName();
				float getAge();
				float getWeight();
				long getTimeActivityPerformed();
				Sex getSex();
				string getStatus();
                        };
                        interface CrewGroup : framework::BioModule{
                                Activity getScheduledActivityByName(in string name);
                                Activity getScheduledActivityByOrder(in long order);
                                CrewPerson getCrewPerson(in string name);
                                CrewPerson createCrewPerson(in string name, in float age, in float weight, in Sex pSex);
				CrewPersonList getCrewPeople();
                        };
                };

                module power{
                        interface PowerPS : framework::BioModule{
                                float getPowerProduced();
                        };
                        interface PowerStore : framework::BioModule{
                                void setPowerCapacity(in float watts);
                                void setPowerLevel(in float watts);
                                float addPower(in float watts);
                                float takePower(in float watts);
                                float getPowerLevel();
                        };
                };

                module air{
                        interface AirRS : framework::BioModule{
                                float getPowerConsumed();
                                float getCO2Consumed();
                                float getO2Produced();
                        };
                        interface O2Store : framework::BioModule{
                                void setO2Capacity(in float liters);
                                void setO2Level(in float liters);
                                float addO2(in float liters);
                                float takeO2(in float liters);
                                float getO2Level();
                        };
                        interface CO2Store : framework::BioModule{
                                void setCO2Capacity(in float liters);
                                void setCO2Level(in float liters);
                                float addCO2(in float liters);
                                float takeCO2(in float liters);
                                float getCO2Level();
                        };
			
			struct Breath{
				float O2;
				float CO2;
				float other;
			};
                };

                module food{
                        interface BiomassRS : framework::BioModule{
                                float getPowerConsumed();
                                float getGreyWaterConsumed();
				float getCO2Consumed();
                                float getBiomassProduced();
                        };
                        interface BiomassStore : framework::BioModule{
                                void setBiomassCapacity(in float kilograms);
                                void setBiomassLevel(in float kilograms);
                                float addBiomass(in float kilograms);
                                float takeBiomass(in float kilograms);
                                float getBiomassLevel();
                        };
                        interface FoodProcessor : framework::BioModule{
                                float getBiomassConsumed();
                                float getPowerConsumed();
                                float getFoodProduced();
                        };
                        interface FoodStore : framework::BioModule{
                                void setFoodCapacity(in float kilograms);
                                void setFoodLevel(in float kilograms);
                                float addFood(in float kilograms);
                                float takeFood(in float kilograms);
                                float getFoodLevel();
                        };
                };

                module environment{
                        interface SimEnvironment : framework::BioModule{
                                void setCO2Level(in float liters);
                                void setO2Level(in float liters);
                                void setOtherLevel(in float liters);
				void setTotalLevel(in float liters);
                                void setCapacity(in float liters);
                                float getO2Level();
                                float getCO2Level();
				float getOtherLevel();
				float getTotalLevel();
                                float addCO2(in float liters);
                                float addO2(in float liters);
				float addOther(in float liters);
                                air::Breath takeO2Breath(in float liters);
				air::Breath takeCO2Breath(in float liters);
				long getTicks();
				void resetTicks();
				void resetLevels();
                        };
                };

                module water{
                        interface WaterRS : framework::BioModule{
                                float getPotableWaterProduced();
                                float getGreyWaterProduced();
                                float getPowerConsumed();
                                float getDirtyWaterConsumed();
                        };
                        interface PotableWaterStore : framework::BioModule{
                                void setWaterCapacity(in float liters);
                                void setWaterLevel(in float liters);
                                float takeWater(in float liters);
                                float addWater(in float liters);
                                float getWaterLevel();
                        };
                        interface GreyWaterStore : framework::BioModule{
                                void setWaterCapacity(in float liters);
                                void setWaterLevel(in float liters);
                                float takeWater(in float liters);
                                float addWater(in float liters);
                                float getWaterLevel();
                        };
                        interface DirtyWaterStore : framework::BioModule{
                                void setWaterCapacity(in float liters);
                                void setWaterLevel(in float liters);
                                float takeWater(in float liters);
                                float addWater(in float liters);
                                float getWaterLevel();
                        };
                };
        };
};

















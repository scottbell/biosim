module air{
        interface O2StoreSensor : framework::GenericSensor{
                void setInput(in simulation::air::O2Store source);
		simulation::air::O2Store getInput();
	};
	interface CO2StoreSensor : framework::GenericSensor{
                void setInput(in simulation::air::CO2Store source);
		simulation::air::CO2Store getInput();
	};
	interface AirRSSensor : framework::GenericSensor{
		void setInput(in simulation::air::AirRS source);
		simulation::air::AirRS getInput();
	};
	interface O2StoreLevelSensor : O2StoreSensor{};
        interface CO2StoreLevelSensor : CO2StoreSensor{};
	interface O2InFlowRateSensor : framework::GenericSensor{
		void setInput(in simulation::air::O2Consumer pConsumer, in long pIndex);
		simulation::air::O2Consumer getInput();
		long getIndex();
	};
	interface O2OutFlowRateSensor : framework::GenericSensor{
		void setInput(in simulation::air::O2Producer pProducer, in long pIndex);
		simulation::air::O2Producer getInput();
		long getIndex();
	};
	interface CO2InFlowRateSensor : framework::GenericSensor{
		void setInput(in simulation::air::CO2Consumer pConsumer, in long pIndex);
		simulation::air::CO2Consumer getInput();
		long getIndex();
	};
	interface CO2OutFlowRateSensor : framework::GenericSensor{
		void setInput(in simulation::air::CO2Producer pProducer, in long pIndex);
		simulation::air::CO2Producer getInput();
		long getIndex();
	};
};

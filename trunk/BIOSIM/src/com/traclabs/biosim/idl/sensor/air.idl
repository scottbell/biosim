module air{
        interface O2StoreSensor : framework::GenericSensor{
                void setInput(in simulation::air::O2Store source);
		simulation::air::O2Store getInput();
	};
	interface CO2StoreSensor : framework::GenericSensor{
                void setInput(in simulation::air::CO2Store source);
		simulation::air::CO2Store getInput();
	};
	interface AirRSSensor : framework::GenericSensor{
		void setInput(in simulation::air::AirRS source);
		simulation::air::AirRS getInput();
	};
	interface O2StoreLevelSensor : O2StoreSensor{};
        interface CO2StoreLevelSensor : CO2StoreSensor{};
	interface O2FlowRateSensor : framework::GenericSensor{
		void setInput(in simulation::air::O2Producer source, in long indexSource, in simulation::air::O2Consumer destination, in long indexDestination);
		simulation::air::O2Producer getProducer();
		simulation::air::O2Consumer getConsumer();
		long getIndexProducer();
		long getIndexConsumer();
	};
	interface CO2FlowRateSensor : framework::GenericSensor{
		void setInput(in simulation::air::CO2Producer source, in long indexSource, in simulation::air::CO2Consumer destination, in long indexDestination);
		simulation::air::CO2Producer getProducer();
		simulation::air::CO2Consumer getConsumer();
	};
};

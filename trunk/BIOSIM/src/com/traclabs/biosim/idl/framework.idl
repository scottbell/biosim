module framework{
        interface Malfunction{
                MalfunctionIntensity getIntensity();
                long long getID();
                string getName();
                boolean hasPerformed();
                void setPerformed(in boolean pPerformed);
                MalfunctionLength getLength();
                void repair();
                boolean isRepaired();
        };
        interface BioModule{
                void tick();
                string getModuleName();
                void reset();
                void setLogging(in boolean pLogging);
                boolean isLogging();
                void setStochasticIntensity(in StochasticIntensity pIntensity);
                StochasticIntensity getStochasticIntensity();
                Malfunction startMalfunction(in MalfunctionIntensity pIntensity, in MalfunctionLength pLength);
                void fixMalfunction(in long long id);
                void fixAllMalfunctions();
                boolean isMalfunctioning();
                StringList getMalfunctionNames();
                MalfunctionList getMalfunctions();
                void maitenance();
                void repair(in long long id);
        };
        interface BioDriver{
                boolean isPaused();
                boolean isStarted();
                void spawnSimulation();
                void spawnSimulationTillDead();
                void spawnSimulationTillN(in long nTicks);
                void pauseSimulation();
                void endSimulation();
                boolean simulationHasStarted();
                void advanceOneTick();
                void resumeSimulation();
                void setLogging(in boolean pLogSim);
                boolean isLogging();
                void setDriverPauseLength(in long pDriverPauseLength);
                long getDriverPauseLength();
                string getName();
                boolean isDone();
                long getTicks();
                void reset();
                boolean isLooping();
                void setLooping(in boolean pLoop);
                void setInitialization(in BioDriverInit myInit);
                void setStochasticIntensity(in StochasticIntensity pIntensity);
                void startMalfunction(in MalfunctionIntensity pIntensity, in MalfunctionLength pLength);
        };
};

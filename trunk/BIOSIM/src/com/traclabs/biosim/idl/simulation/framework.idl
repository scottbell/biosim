module framework{
        interface Store : framework::BioModule{
                void setCapacity(in float metricAmount);
                void setLevel(in float metricAmount);
                float add(in float metricAmount);
                float take(in float metricAmount);
                float getLevel();
                float getCapacity();
                boolean isPipe();
                void setPipe(in boolean pPipe);
        };
        interface SimBioModule : framework::BioModule{};
        interface Injector : framework::SimBioModule, framework::PowerConsumer, framework::PotableWaterConsumer, framework::GreyWaterConsumer, framework::DirtyWaterConsumer, framework::O2Consumer, framework::CO2Consumer, framework::AirConsumer, framework::BiomassConsumer, framework::FoodConsumer, framework::O2AirConsumer, framework::CO2AirConsumer, framework::PowerProducer, framework::PotableWaterProducer, framework::GreyWaterProducer, framework::DirtyWaterProducer, framework::O2Producer, framework::CO2Producer, framework::AirProducer, framework::BiomassProducer, framework::FoodProducer, framework::O2AirProducer, framework::CO2AirProducer{};
	interface Accumulator : framework::SimBioModule, framework::PowerConsumer, framework::PotableWaterConsumer, framework::GreyWaterConsumer, framework::DirtyWaterConsumer, framework::O2Consumer, framework::CO2Consumer, framework::AirConsumer, framework::BiomassConsumer, framework::FoodConsumer, framework::O2AirConsumer, framework::CO2AirConsumer, framework::PowerProducer, framework::PotableWaterProducer, framework::GreyWaterProducer, framework::DirtyWaterProducer, framework::O2Producer, framework::CO2Producer, framework::AirProducer, framework::BiomassProducer, framework::FoodProducer, framework::O2AirProducer, framework::CO2AirProducer{};
	
};

module framework{
        interface Store : framework::BioModule{
                void setCapacity(in float metricAmount);
                void setLevel(in float metricAmount);
                float add(in float metricAmount);
                float take(in float metricAmount);
                float getLevel();
                float getCapacity();
                boolean isPipe();
                void setPipe(in boolean pPipe);
        };
        interface SimBioModule : framework::BioModule{};
        interface Injector : framework::SimBioModule, power::PowerConsumer, water::PotableWaterConsumer, water::GreyWaterConsumer, water::DirtyWaterConsumer, air::O2Consumer, air::CO2Consumer, environment::AirConsumer, food::BiomassConsumer, food::FoodConsumer, environment::O2AirConsumer, environment::CO2AirConsumer, power::PowerProducer, water::PotableWaterProducer, water::GreyWaterProducer, water::DirtyWaterProducer, air::O2Producer, air::CO2Producer, environment::AirProducer, food::BiomassProducer, food::FoodProducer, environment::O2AirProducer, environment::CO2AirProducer{};
	interface Accumulator : framework::SimBioModule, power::PowerConsumer, water::PotableWaterConsumer, water::GreyWaterConsumer, water::DirtyWaterConsumer, air::O2Consumer, air::CO2Consumer, environment::AirConsumer, food::BiomassConsumer, food::FoodConsumer, environment::O2AirConsumer, environment::CO2AirConsumer, power::PowerProducer, water::PotableWaterProducer, water::GreyWaterProducer, water::DirtyWaterProducer, air::O2Producer, air::CO2Producer, environment::AirProducer, food::BiomassProducer, food::FoodProducer, environment::O2AirProducer, environment::CO2AirProducer{};    
};
